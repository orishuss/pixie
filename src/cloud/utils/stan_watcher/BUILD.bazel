# Copyright 2018- The Pixie Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

load("@io_bazel_rules_docker//container:container.bzl", "container_push")
load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
load("//bazel:go_image_alias.bzl", "go_image")

go_library(
    name = "stan_watcher_lib",
    srcs = ["stan_watcher.go"],
    importpath = "px.dev/pixie/src/cloud/utils/stan_watcher",
    visibility = ["//visibility:private"],
    deps = [
        "//src/shared/cvmsgspb:cvmsgs_pl_go_proto",
        "//src/shared/services",
        "//src/shared/services/msgbus",
        "//src/vizier/messages/messagespb:messages_pl_go_proto",
        "@com_github_fatih_color//:color",
        "@com_github_gogo_protobuf//proto",
        "@com_github_gogo_protobuf//types",
        "@com_github_nats_io_nats_go//:nats_go",
        "@com_github_nats_io_stan_go//:stan_go",
        "@com_github_sirupsen_logrus//:logrus",
        "@com_github_spf13_pflag//:pflag",
        "@com_github_spf13_viper//:viper",
    ],
)

go_binary(
    name = "stan_watcher",
    embed = [":stan_watcher_lib"],
    visibility = ["//src/cloud:__subpackages__"],
)

go_image(
    name = "stan_watcher_image",
    binary = ":stan_watcher",
    visibility = ["//src/cloud:__subpackages__"],
)

container_push(
    name = "push_stan_watcher_image",
    format = "Docker",
    image = ":stan_watcher_image",
    registry = "gcr.io",
    repository = "pixie-oss/pixie-dev/cloud/stan_watcher",
    tag = "{STABLE_BUILD_TAG}",
)

# Copyright 2018- The Pixie Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

load("@io_bazel_rules_docker//java:image.bzl", "java_image")
load("@rules_java//java:defs.bzl", "java_binary")
load("//bazel:pl_build_system.bzl", "pl_cc_binary")

package(default_visibility = ["//src/stirling:__subpackages__"])

# When invoking "fib_with_agent", to inject the JVMTI agent,
# we need a command line arg. that looks like this:
# -agentpath:/path/to/libagent.so=<symbolization-file-path-prefix>
# We build this up using so_path, symbol_file_path, and jvm_flags, below.

# Construct the agent path portion of the command line arg.
so_path = "-agentpath:$(location //src/stirling/source_connectors/perf_profiler/java/agent:glibc)"

# The agent_test will be create the symbol in directory "java-agent-test-<PX_JVMTI_AGENT_HASH>"
# in the test cwd. The suffix "-<PX_JVMTI_AGENT_HASH>" is added by the agent itself.
symbol_file_path = "./java-agent-test"

# Construct the full cmd line args here.
jvm_flags = [so_path + "=" + symbol_file_path]

java_binary(
    name = "fib_with_agent",
    srcs = ["Fib.java"],
    args = ["-XX:+PreserveFramePointer"],
    data = ["//src/stirling/source_connectors/perf_profiler/java/agent:glibc"],
    jvm_flags = jvm_flags,
    main_class = "JavaFib",
)

java_binary(
    name = "fib",
    srcs = ["Fib.java"],
    args = ["-XX:+PreserveFramePointer"],
    main_class = "JavaFib",
)

pl_cc_binary(
    name = "java",
    srcs = ["fake_java.cc"],
    deps = [
        "//src/common/fs:cc_library",
        "//src/stirling/bpf_tools/bcc_bpf_intf:cc_library",
        "//src/stirling/source_connectors/perf_profiler/java:cc_library",
        "//src/stirling/source_connectors/perf_profiler/java/agent:cc_headers",
    ],
)

java_image(
    name = "image",
    srcs = ["Fib.java"],
    args = ["-XX:+PreserveFramePointer"],
    main_class = "JavaFib",
)
